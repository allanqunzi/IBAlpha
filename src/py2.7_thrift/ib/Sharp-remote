#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.9.2)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import TSSLSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

from ib import Sharp
from ib.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print('')
  print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] function [arg1 [arg2...]]')
  print('')
  print('Functions:')
  print('  PingResponse ping(PingRequest request)')
  print('  i64 getOrderID()')
  print('  OrderResponse placeOrder(ContractRequest c_req, OrderRequest o_req)')
  print('  OrderResponse cancelOrder(i64 o_id)')
  print('  OrderStatus getOrderStatus(i64 o_id)')
  print('   reqOpenOrders()')
  print('   reqAllOpenOrders()')
  print('  void reqGlobalCancel()')
  print('   reqExecutions(ExecutionFilter ef)')
  print('  void reqRealTimeBars()')
  print('  void addToWatchList( wl)')
  print('  void removeFromWatchList( rm)')
  print('  void removeZombieSymbols( rm)')
  print('  RealTimeBar getNextBar(string symbol)')
  print('   reqStkPositions(bool refresh)')
  print('   reqOptPositions(bool refresh)')
  print('   reqAccountValue(string acctCode, bool refresh)')
  print('   reqPortfolio(string acctCode, bool refresh)')
  print('')
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
  ssl = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSSLSocket.TSSLSocket(host, port, validate=False) if ssl else TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = Sharp.Client(protocol)
transport.open()

if cmd == 'ping':
  if len(args) != 1:
    print('ping requires 1 args')
    sys.exit(1)
  pp.pprint(client.ping(eval(args[0]),))

elif cmd == 'getOrderID':
  if len(args) != 0:
    print('getOrderID requires 0 args')
    sys.exit(1)
  pp.pprint(client.getOrderID())

elif cmd == 'placeOrder':
  if len(args) != 2:
    print('placeOrder requires 2 args')
    sys.exit(1)
  pp.pprint(client.placeOrder(eval(args[0]),eval(args[1]),))

elif cmd == 'cancelOrder':
  if len(args) != 1:
    print('cancelOrder requires 1 args')
    sys.exit(1)
  pp.pprint(client.cancelOrder(eval(args[0]),))

elif cmd == 'getOrderStatus':
  if len(args) != 1:
    print('getOrderStatus requires 1 args')
    sys.exit(1)
  pp.pprint(client.getOrderStatus(eval(args[0]),))

elif cmd == 'reqOpenOrders':
  if len(args) != 0:
    print('reqOpenOrders requires 0 args')
    sys.exit(1)
  pp.pprint(client.reqOpenOrders())

elif cmd == 'reqAllOpenOrders':
  if len(args) != 0:
    print('reqAllOpenOrders requires 0 args')
    sys.exit(1)
  pp.pprint(client.reqAllOpenOrders())

elif cmd == 'reqGlobalCancel':
  if len(args) != 0:
    print('reqGlobalCancel requires 0 args')
    sys.exit(1)
  pp.pprint(client.reqGlobalCancel())

elif cmd == 'reqExecutions':
  if len(args) != 1:
    print('reqExecutions requires 1 args')
    sys.exit(1)
  pp.pprint(client.reqExecutions(eval(args[0]),))

elif cmd == 'reqRealTimeBars':
  if len(args) != 0:
    print('reqRealTimeBars requires 0 args')
    sys.exit(1)
  pp.pprint(client.reqRealTimeBars())

elif cmd == 'addToWatchList':
  if len(args) != 1:
    print('addToWatchList requires 1 args')
    sys.exit(1)
  pp.pprint(client.addToWatchList(eval(args[0]),))

elif cmd == 'removeFromWatchList':
  if len(args) != 1:
    print('removeFromWatchList requires 1 args')
    sys.exit(1)
  pp.pprint(client.removeFromWatchList(eval(args[0]),))

elif cmd == 'removeZombieSymbols':
  if len(args) != 1:
    print('removeZombieSymbols requires 1 args')
    sys.exit(1)
  pp.pprint(client.removeZombieSymbols(eval(args[0]),))

elif cmd == 'getNextBar':
  if len(args) != 1:
    print('getNextBar requires 1 args')
    sys.exit(1)
  pp.pprint(client.getNextBar(args[0],))

elif cmd == 'reqStkPositions':
  if len(args) != 1:
    print('reqStkPositions requires 1 args')
    sys.exit(1)
  pp.pprint(client.reqStkPositions(eval(args[0]),))

elif cmd == 'reqOptPositions':
  if len(args) != 1:
    print('reqOptPositions requires 1 args')
    sys.exit(1)
  pp.pprint(client.reqOptPositions(eval(args[0]),))

elif cmd == 'reqAccountValue':
  if len(args) != 2:
    print('reqAccountValue requires 2 args')
    sys.exit(1)
  pp.pprint(client.reqAccountValue(args[0],eval(args[1]),))

elif cmd == 'reqPortfolio':
  if len(args) != 2:
    print('reqPortfolio requires 2 args')
    sys.exit(1)
  pp.pprint(client.reqPortfolio(args[0],eval(args[1]),))

else:
  print('Unrecognized method %s' % cmd)
  sys.exit(1)

transport.close()
